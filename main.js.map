{"version":3,"sources":["./src/app/data-table/data-table.component.ts","./src/app/data-table/data-table.component.html","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/services/freeapi.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.css']\n})\nexport class DataTableComponent {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatTable) table: MatTable<DataTableItem>;\n  @Input('itemToShow') itemToShow: any;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['city', 'weather','icon','lon','lat','temp','tempMin','tempMax'];\n}\n\nexport interface DataTableItem {\n  city: string;\n  weather: string;\n  icon: string;\n  lon: string;\n  lat: string;\n  temp: string;\n  tempMin: string;\n  tempMax: string;\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" [dataSource]=\"itemToShow\" aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"city\">\n      <th mat-header-cell *matHeaderCellDef>City</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.city}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"weather\">\n      <th mat-header-cell *matHeaderCellDef>Weather</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.weather}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"icon\">\n      <th mat-header-cell *matHeaderCellDef>Icon</th>\n      <td mat-cell *matCellDef=\"let row\"><img src=\"{{row.icon}}\" id=\"icon\"></td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lon\">\n      <th mat-header-cell *matHeaderCellDef>Longitude</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.lon}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lat\">\n      <th mat-header-cell *matHeaderCellDef>Latitude</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.lat}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"temp\">\n      <th mat-header-cell *matHeaderCellDef>Temp</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.temp - 273 | number:'.1'}}°C</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"tempMin\">\n      <th mat-header-cell *matHeaderCellDef>TempMin</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.tempMin - 273 | number:'.1'}}°C</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"tempMax\">\n      <th mat-header-cell *matHeaderCellDef>TempMax</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.tempMax - 273 | number:'.1'}}°C</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<mat-toolbar color=\"primary\">\n  <span>Current weather</span>\n</mat-toolbar>\n\n<mat-form-field class=\"input\">\n  <mat-label>City</mat-label>\n  <input matInput placeholder=\"Ex. London\" (keyup)=\"onKey($event)\">\n</mat-form-field>\n\n<button mat-raised-button color=\"accent\" (click)=\"onClickMe()\">Check weather</button>\n\n<br>\n<div id=\"comp-render\" *ngIf=\"display\">\n  <app-data-table [itemToShow]=\"itemToShow\"></app-data-table>\n</div>","import { Component } from '@angular/core';\nimport { DataTableItem } from './data-table/data-table.component';\nimport { FreeapiService } from './services/freeapi.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'api-v1';\n\n  constructor(private _freeApiService: FreeapiService){\n\n  }\n\n  city:string;\n  lon:string;\n  lat:string;\n  weather:any;\n  temp:string;\n  tempMin:string;\n  tempMax:string;\n\n  cityName:string;\n\n  itemToShow: DataTableItem[];\n\n  onKey(event: any) { // without type info\n    this.cityName = event.target.value;\n   \n  }\n\n  display = false;\n  onClickMe() {\n    this.display = true;\n    this._freeApiService.getWeatherData(this.cityName)\n    .subscribe\n    (\n      data=>\n      {\n        this.itemToShow = [{\n          city: data.name,\n          weather: data.weather[0].main,\n          icon: \"http://openweathermap.org/img/wn/\"+ data.weather[0].icon +\".png\",\n          lon: data.coord.lon,\n          lat: data.coord.lat,\n          temp: data.main.temp,\n          tempMin: data.main.temp_min,\n          tempMax: data.main.temp_max,\n        }\n        ];\n\n      }\n    );\n    \n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { FreeapiService } from './services/freeapi.service';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DataTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatToolbarModule\n  ],\n  \n  providers: [FreeapiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FreeapiService {\n\n  constructor(private httpclient: HttpClient) { }\n\n  getWeatherData(city:string): Observable<any>{\n    return this.httpclient.get(\"https://api.openweathermap.org/data/2.5/weather?q=\"+ city + \"&appid=d0e88ddec4dda09589b5a39235133b11\").pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error:any) {\n    let errorMessage = '';\n    errorMessage = `Error: ${error.error.message}`;\n    window.alert(errorMessage);\n\n    return throwError(errorMessage);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}